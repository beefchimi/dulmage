@import './shared.css';

:root {
  --color-portfolio: rgb(0, 0, 0);
  --color-primary: rgb(255, 255, 255, 1);
  --color-highlight: rgb(0, 0, 0, 0.1);

  --index-surface: 100;
  --index-troposphere: 200;
  --index-stratosphere: 300;
  --index-mesosphere: 400;
  --index-thermosphere: 500;
  --index-exosphere: 600;
  --index-outerspace: 700;

  --space-tightest: 0.8rem;
  --space-tighter: 1.6rem;
  --space-tight: 2.4rem;
  --space: 3.2rem;
  --space-loose: 4rem;
  --space-looser: 4.8rem;
  --space-loosest: 5.6rem;
  --space-fat: 6.4rem;
  --space-fatter: 7.2rem;
  --space-fattest: 8rem;

  --radius-tight: 0.1rem;
  --radius: 0.3rem;
  --radius-loose: 0.6rem;
  --radius-looser: 0.8rem;

  --speed-fastest: 30ms;
  --speed-faster: 60ms;
  --speed-fast: 120ms;
  --speed: 240ms;
  --speed-slow: 480ms;
  --speed-slower: 960ms;
  --speed-slowest: 1920ms;

  --ease: cubic-bezier(0.64, 0, 0.32, 1);
  --ease-excite: cubic-bezier(0.18, 0.66, 0.6, 1.22);
  --ease-bungie: cubic-bezier(0.32, 1.46, 0.54, 1.28);
  --ease-anticipate: cubic-bezier(0.38, -0.4, 0.84, 0.44);

  --focus-offset: -0.6rem;
  --icon-size: 2rem;

  /* Typography */

  --p-size: 1.4rem;
  --subhead-size: 2.2rem;

  --h1-size: 3.6rem;
  --h2-size: 2rem;
  --h3-size: 1.2rem;
  --h4-size: 1.8rem;
  --h5-size: 7.2rem;

  @media (--min-tablet) {
    --h1-size: 8rem;
    --h2-size: 2.4rem;
    --h3-size: 1.4rem;
    --h4-size: 2rem;
  }

  @media (--min-desktop) {
    --h1-size: 10rem;
    --p-size: 1.6rem;
  }

  /* Components */
  --hamburger-height: 2rem;
  --hamburger-padding: var(--space-tightest);
}

::selection {
  color: var(--color-primary);
  background-color: var(--color-portfolio);
}

html {
  background-color: var(--color-portfolio);
}

body {
  font-family: 'Outfit Variable', var(--font-stack-sans-serif);
  cursor: url('../assets/svg/cursors/CursorAuto.svg'), auto;
}

/* --- Scroll snapping --- */

html {
  /*
    Scroll snapping creates many problems on iOS when used in combination
     with `100vh`, so we are enabling this only for larger devices.
  */
  @media (--min-desktop) {
    scroll-snap-type: y proximity;
  }
}

.section {
  /* See note above about iOS issues */
  @media (--min-desktop) {
    scroll-snap-align: start;
  }
}

/* --- Components --- */

.section {
  width: 100dvw;
  /*
    `lvh` appears to behave differently between various Mobile browsers...
    but the intention is to always use the "largest viewport height".
    Using a "dynamic" height leads to a lot of scroll jank.
  */
  height: 100lvh;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  /*
    Required to prevent content from spilling over
    when on a very short height display.
  */
  overflow: hidden;
}

.section-interior {
  display: grid;
  gap: var(--space-looser);
  place-content: center;
  place-items: center;
  width: 100%;
  height: 100%;

  @media (--min-tablet) {
    gap: var(--space-fattest);
  }
}

/* --- Typography --- */

.paragraph {
  font-size: var(--p-size);
  text-align: center;
  line-height: 1.2;
  color: var(--color-primary);
}

.heading {
  text-align: center;
  text-transform: uppercase;
  line-height: 1.2;
  color: var(--color-primary);
}

.heading--1 {
  font-size: var(--h1-size);
  font-weight: 800;
  letter-spacing: 1rem;

  @media (--min-tablet) {
    letter-spacing: 3rem;
  }
}

.heading--2 {
  font-size: var(--h2-size);
  letter-spacing: 0.2rem;

  @media (--min-tablet) {
    letter-spacing: 0.4rem;
  }
}

.heading--3 {
  font-size: var(--h3-size);
  font-weight: 900;
  letter-spacing: 0.2rem;

  @media (--min-tablet) {
    letter-spacing: 0.4rem;
  }
}

.heading--4 {
  font-size: var(--h4-size);
  letter-spacing: 0.2rem;
  line-height: 1.1;

  @media (--min-tablet) {
    letter-spacing: 0.3rem;
  }
}

.heading--5 {
  font-size: var(--h5-size);
  font-weight: 700;
  letter-spacing: 0.8rem;
  line-height: 1.2;
}

.heading-link {
  position: relative;
  display: inline-block;
  color: var(--color-primary);

  &::before {
    content: '';
    position: absolute;
    right: 0;
    bottom: calc(var(--space-tightest) * -1);
    left: 0;
    display: block;
    width: 0%;
    height: 0.1rem;
    margin: 0 auto;
    background-color: currentColor;
    transition-property: width, opacity;
    transition-duration: var(--speed);
    transition-timing-function: var(--ease);
  }

  &:focus::before,
  &:hover::before {
    width: 100%;
    opacity: 1;
  }

  &:active::before {
    width: 60%;
    opacity: 1;
  }
}

/* --- Cursors --- */

p,
h1,
h2,
h3,
h4,
h5,
h6,
li,
dd,
dt,
pre,
code,
cite,
blockquote,
figcaption {
  cursor: url('../assets/svg/cursors/CursorText.svg'), text;
}

a,
button {
  &,
  & * {
    cursor: url('../assets/svg/cursors/CursorPointer.svg'), pointer;
  }

  &:active,
  &:active * {
    cursor: url('../assets/svg/cursors/CursorPointerClicked.svg'), pointer;
  }
}

.preload-cursors {
  /*
    Required to preload the variant cursor. Otherwise, there will be
    a delay upon click when switching to the different cursor asset.
  */

  > b {
    cursor: url('../assets/svg/cursors/CursorDeadClicked.svg'), auto;
  }

  > u {
    cursor: url('../assets/svg/cursors/CursorHornsClicked.svg'), pointer;
  }

  > i {
    cursor: url('../assets/svg/cursors/CursorPointerClicked.svg'), pointer;
  }

  /*
  > strong {
    cursor: url('../assets/svg/cursors/CursorGrabClicked.svg'), pointer;
  }
  */
}

/* --- Global animations --- */

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
