@import 'utilities/shared/layout';
@import 'props';

.Navigation {
  // Navigation will get cut off if the document height is too short,
  // so its best to just hide it.
  @media only screen and (max-height: get-breakpoint(mobile, wide)) {
    @include visible(false);
  }
}

.ProjectsMenu {
  position: fixed;
  z-index: get-z-index(stratosphere);
  bottom: $projects-menu-bottom;
  right: 0;
  width: 0;

  // stylelint-disable-next-line selector-max-attribute
  [aria-controls='ProjectsMenu'][aria-expanded='true'] + & {
    width: auto;
  }

  @media only screen and (min-width: get-breakpoint(tablet)) {
    bottom: $projects-menu-bottom-desktop;
  }
}

.ProjectsMenuItem {
  float: right;
  clear: both;
  transform: translateX(calc(100% + #{$projects-menu-item-shift-x + $projects-menu-offset-safety}));
  transition: transform get-duration() get-easing();

  // stylelint-disable-next-line selector-max-attribute
  [aria-controls='ProjectsMenu'][aria-expanded='true'] + .ProjectsMenu & {
    transform: translateX($projects-menu-item-shift-x + $projects-menu-offset-safety);
  }

  $item-delay: 0ms;

  @for $i from 1 through $projects-count {
    &:nth-child(#{$i}) {
      transition-delay: #{$item-delay};
    }

    $item-delay: $item-delay + get-duration(fastest);
  }
}

.ProjectsMenuLink {
  position: relative;
  display: block;
  color: var(--dulmage-color);
  background-color: var(--dulmage-color);
  transition: transform get-duration() get-easing();

  &::before {
    @include position-cover;
    content: '';
    display: block;
    background-color: white;
    opacity: 0.9;
    transition: opacity get-duration() get-easing();
  }

  // TODO: Better a11y styles
  // :-moz-focusring
  // :focus-visible

  &:focus,
  &:hover {
    transform: translateX(-$projects-menu-item-shift-x);

    &::before {
      opacity: 1;
    }
  }

  &:active {
    transform: translateX(0);

    &::before {
      opacity: 0.9;
    }
  }

  @for $i from 0 through $projects-count {
    [data-current-index='#{$i}'] .ProjectsMenuItem:nth-child(#{$i + 1}) & {
      color: white;
      transform: translateX(-$projects-menu-item-shift-x);

      &::before {
        opacity: 0;
      }
    }
  }
}

.ProjectsMenuTitle {
  position: relative;
  display: block;
  padding: $projects-menu-title-padding;
  font-size: get-type-scale(paragraph);
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.2rem;
  white-space: nowrap;

  @media only screen and (min-width: get-breakpoint(tablet)) {
    padding: $projects-menu-title-padding-tablet;
  }

  @media only screen and (min-width: get-breakpoint(desktop)) {
    font-size: get-type-scale(paragraph, desktop);
    padding: $projects-menu-title-padding-desktop;
  }
}
